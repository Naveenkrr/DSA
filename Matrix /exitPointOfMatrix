/* 

Problem : Exit point of a matrix 

Given a matrix of size n x m with 0’s and 1’s, you enter the matrix at cell (0,0) in left to right direction.
Whenever you encounter a 0 you retain it in the same direction, else if you encounter a 1 you have to change 
the direction to the right of the current direction and change that 1 value to 0, you have to find out from 
which index you will leave the matrix at the end.

*/

class Solution {
    public int[] FindExitPoint(int n, int m, int[][] matrix) {
        // code here
        int[][] direction = { {0,1} , {1,0} , {0,-1} , {-1,0}};
        return solve(0 , 0 , 0 , direction , matrix);
    }
    
    public int[] solve(int i, int j, int currDir, int[][] dir , int[][] grid){
        
        if(grid[i][j] == 1){
            currDir = (currDir + 1) % 4;
            grid[i][j] = 0;
        }
        
        int tempi = i + dir[currDir][0];
        int tempj = j + dir[currDir][1];
        
        if(tempi<0 || tempi==grid.length || tempj<0 || tempj==grid[0].length)
            return new int[]{i,j};
            
        return solve( tempi , tempj, currDir , dir , grid);
    }
}
